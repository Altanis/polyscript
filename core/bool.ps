type bool = __BUILTIN_BOOL__;

impl TClonable for bool {
    fn clone(&self) -> Self {
        return *self;
    }
}

impl TCopyable for bool {}

impl TEquatable for bool {
    fn equate(&self, other: &Self) -> bool {
        return *self == *other;
    }
}

impl TOrderable for bool {
    fn order(&self, other: &Self) -> Ordering {
        if *self < *other {
            return Ordering::Less;
        } else if *self > *other {
            return Ordering::Greater;
        } else {
            return Ordering::Equal;
        }
    }
}

impl TDefault for bool {
    fn default() -> Self {
        return false;
    }
}

impl TNot for bool {
    fn not(this: Self) -> Self {
        return !this;
    }
}

impl TAnd for bool {
    fn and(this: Self, other: Self) -> Self {
        return this && other;
    }
}

impl TOr for bool {
    fn or(this: Self, other: Self) -> Self {
        return this || other;
    }
}