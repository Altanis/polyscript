struct Iterable {}

trait Iterator {
    type Item;

    fn next(&self): Self.Item;
}

impl Iterator for Iterable {
    type Item = int;

    fn next(&self): Self.Item {
        return 3;
    }
}

fn next<I: Iterator>(x: &I): [I as Iterator].Item {
    return [I as Iterator].next(&x);
}

let iterator = Iterable {};
let x: int = next(&iterator);