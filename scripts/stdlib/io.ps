import { print_char, eprint_char } from "@intrinsics";
import { String, ToString } from "stdlib/string.ps";

fn print<T: ToString>(data: T) {
    let string = [T as ToString].to_string(&data);
    for (let i = 0; i < string.length(); i += 1) {
        print_char(string.get(i));
    }
}

fn println<T: ToString>(data: T) {
    print(data);
    print_char('\n');
}

fn eprint<T: ToString>(data: T) {
    let string = [T as ToString].to_string(&data);
    for (let i = 0; i < string.length(); i += 1) {
        eprint_char(string.get(i));
    }
}

fn eprintln<T: ToString>(data: T) {
    eprint(data);
    eprint_char('\n');
}

export { print, eprint, println, eprintln };