// todo: trait constraints, downcasting

struct Point {
    x: int;
    y: int;
}

trait Hash {
    type Output;
    fn hash(&this): Self.Output;
}

impl Hash for Point {
    type Output = int;
    fn hash(&this): Self.Output {
        return 3;
    }
}

fn hasher<T: Hash>(x: &T) {
    let y = x.hash();
}