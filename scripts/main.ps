// memory safety (reference counting)
// real compiler that takes file input + import/export system
// default traits such as Clone, Default, ToString
// stdlib
    // io + math + vec + hashmap + string
// arrays + vectors + Indexable trait
// create String struct of Vec<u8> (maybe add unions and union [u8; 15] and Vec<u8>)
    // impl Add<str> for str {} inside file
// maybe add prelude system

struct Scalar<T> {
    x: T;
}

trait TAddable {
    fn add(self, other: Self): Self;
}

impl TAddable for int {
    fn add(self, other: int): Self {
        self + other
    }
}

impl<T: TAddable> Scalar<T> {
    public fn add(self, vector: Scalar<T>): Scalar<T> {
        return Scalar {
            x: self.x.add(vector.x)
        };
    }
}