// arrays + Indexable trait
// stdlib
    // math + vec + string + io + hashmap
// default traits such as Drop, Clone, Default, ToString
// create String struct of Vec<u8> (maybe add unions and union [u8; 15] and Vec<u8>)
    // impl Add<str> for str {} inside file
// maybe add prelude system

/*struct Vec<T> { size: int; }
impl<T> Vec<T> {
    fn new(): Vec<T> {
        Vec {
            size: sizeof T
        }
    }
}

let v = [Vec<int>].new();*/

// this doesnt compile:

struct Scalar {}
impl Drop for Scalar {
    fn drop(&mut self) {
        let x = 5;
    }
}

impl Scalar {
    fn drop(&mut self) {}
}

let x = (Scalar {});
[Scalar as Drop].drop(&mut x);