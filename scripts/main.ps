// functions as first class types
    // assign regular functions to variables
    // assign closures to variables
// memory safety (reference counting)
// real compiler that takes file input + import/export system
// default traits such as Clone, Default, ToString
// stdlib
    // io + math + vec + hashmap + string
// arrays + vectors + Indexable trait
// create String struct of Vec<u8> (maybe add unions and union [u8; 15] and Vec<u8>)
    // impl Add<str> for str {} inside file
// maybe add prelude system

/*let konst = 4;
fn add(x: int): int {
    x + konst
}*/

//let x = add;
//let y = x(3);

/*fn make_identity(): fn(T): T {
    fn(x: T): T { x }
}

let value = (make_identity())(4);*/

/*fn make_adder(): fn(int, int): int {
    fn(x: int, y: int): int { x + y }
}

let adder = make_adder();
let y = adder(3, 4);*/

fn test(): int {
    fn wow(): int { return 3; }
    return wow();
}

let x = test();