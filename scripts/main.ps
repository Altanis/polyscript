// monomorphize &self and &mut self methods to also take &'heap self and &'heap mut self
// memory safety (reference counting)
    // when finished, add trait Drop that can be implemented on types
// real compiler that takes file input + import/export system
// default traits such as Clone, Default, ToString
// stdlib
    // io + math + vec + hashmap + string
// arrays + vectors + Indexable trait
// create String struct of Vec<u8> (maybe add unions and union [u8; 15] and Vec<u8>)
    // impl Add<str> for str {} inside file
// maybe add prelude system

struct X {}
impl X {
    fn test(&self) {}
    fn test2(&mut self) {} 
}

let x: X = X {};
let ref: &mut X = &mut x;
let y: &'heap mut X = heap (X {});

ref.test();
y.test();

ref.test2();
y.test2();