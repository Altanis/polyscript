trait Iterator {
    type Item;
    fn next(&this): Self.Item;
}

fn next_item<I: Iterator>(x: &I): [I as Iterator].Item {
  x.next()
}

struct X {}
impl Iterator for X {
    type Item = int;
    fn next(&this): Self.Item {
        3
    }
}

let x = X {};
let next: [X as Iterator].Item = next_item(&x);