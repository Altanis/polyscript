struct Vector2 {
    public x: int;
    public y: int;
}

struct Scalar {
    public value: int;
}

trait Combine<Other> {
    type Output;
    fn combine(&this, other: Other): Self.Output;
}

impl Combine<Scalar> for Vector2 {
    type Output = Vector2;

    fn combine(&this, other: Scalar): Vector2 {
        return Vector2 {
            x: this.x * other.value,
            y: this.y * other.value
        };
    }
}

let v = Vector2 { x: 2, y: 3 };
let s = Scalar { value: 5 };

let result = v.combine(s); 