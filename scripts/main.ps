// compiler directive in trusted mode
// allow int <=> &T in trusted mode
// opaque exit with never type, typecheck functions that return never
// `drop(x)` => dont allow x to be accessed

// arrays + Indexable trait
// stdlib
    // math + vec + string + io + hashmap
// default traits such as Drop, Clone, Default, ToString
// create String struct of Vec<u8> (maybe add unions and union [u8; 15] and Vec<u8>)
    // impl Add<str> for str {} inside file
// maybe add prelude system

struct X {
    x: int;
}

impl Drop for X {
    fn drop(&mut self) {
        let x = 3;
    }
}

impl Clone for X {
    fn clone(&self): Self {
        X { x: self.x }
    }
}

{
    let x = X { x: 4 };
}

{
    let x = heap (X { x: 4 });
    let x2 = x.clone();
    let x3 = *x;
}