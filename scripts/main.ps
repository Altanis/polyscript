// todo: path qualifiers, fix spans

struct Point<T> {
    x: T;
    y: T;
}

trait Hash {
    type Output;
    fn hash(&this): Self.Output;
}

impl<T> Hash for Point<T> {
    type Output = T;

    fn hash(&this): Self.Output {
        return this.x;
    }
}

fn hasher<T: Hash>(x: &T) {
    let y: <T as Hash>.Output = x.hash();
}

let point: Point<int> = Point {
    x: 3,
    y: 3
};

let hash = hasher(&point);