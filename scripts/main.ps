struct Vector3D[T, U] {
    x: T;
    y: U;
    z: float;
}

let v: Vector3D[float, float] = Vector3D {
    x: 0.0,
    y: 0.0,
    z: 0.0
};

// todo: make unification handle generic shit to resolve <U, V> => <float, float>
// rn generics cant unify with other types
// also make sure inconsistent constraints dont get resolved, i.e. T = float = int.