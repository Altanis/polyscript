// arrays + Indexable trait
// stdlib
    // math + vec + string + io + hashmap
// default traits such as Drop, Clone, Default, ToString
// create String struct of Vec<u8> (maybe add unions and union [u8; 15] and Vec<u8>)
    // impl Add<str> for str {} inside file
// maybe add prelude system

struct HeavyData<T> {
    x: T;
}

impl<U: Clone> Clone for HeavyData<U> {
    fn clone(&self): Self {
        Self { x: [U as Clone].clone(&self.x) }
    }
}

let x = HeavyData { x: 4 };
let y = [HeavyData<int> as Clone].clone(&x);