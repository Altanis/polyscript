// memory safety (reference counting)
// real compiler that takes file input + import/export system
// default traits such as Clone, Default, ToString
// stdlib
    // io + math + vec + hashmap + string
// arrays + vectors + Indexable trait
// create String struct of Vec<u8> (maybe add unions and union [u8; 15] and Vec<u8>)
    // impl Add<str> for str {} inside file
// maybe add prelude system

trait Animal {
    type SpeechEmission;

    fn speak(&self): Self.SpeechEmission;
}

struct Dog {}
struct Cat {}

impl Animal for Dog {
    type SpeechEmission = char;
    fn speak(&self): Self.SpeechEmission {
        return 'b';
    }
}

impl Animal for Cat {
    type SpeechEmission = str;
    fn speak(&self): Self.SpeechEmission {
        return "meow";
    }
}

impl Dog {
    type SpeechEmission = float;
}

let dog = Dog {};
let cat = Cat {};

let emission1: [Cat as Animal].SpeechEmission = cat.speak();