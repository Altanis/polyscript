// functions as first class types
    // assign regular functions to variables
    // assign closures to variables
    // assign generic functions to variables
// memory safety (reference counting)
// real compiler that takes file input + import/export system
// default traits such as Clone, Default, ToString
// stdlib
    // io + math + vec + hashmap + string
// arrays + vectors + Indexable trait
// create String struct of Vec<u8> (maybe add unions and union [u8; 15] and Vec<u8>)
    // impl Add<str> for str {} inside file
// maybe add prelude system

fn adder<T: Add<T>>(x: T): [T as Add<T>].Output {
    x + 4
}

/*let konst = 5;
fn make_adder<T: Add<T>>(): fn(T): [T as Add<T>].Output {
    fn(x: T): [T as Add<T>].Output { x + konst }
}

let added = (make_adder())("#");*/